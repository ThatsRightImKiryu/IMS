apiVersion: v1
data:
  init.sql: |
    -- Создание таблицы для пользователей
    CREATE TABLE users (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        phone VARCHAR(15),
        role VARCHAR(50) CHECK (role IN ('owner', 'team_member')) NOT NULL, -- Добавление колонки роли
        created_at TIMESTAMP DEFAULT NOW()
    );

    -- Создание таблицы для сервисов
    CREATE TABLE services (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        description TEXT
    );

    -- Создание таблицы для инцидентов
    CREATE TABLE incidents (
        id SERIAL PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        description TEXT,
        status VARCHAR(50) NOT NULL CHECK (status IN ('open', 'closed', 'in-progress', 'resolved')),
        priority VARCHAR(20) CHECK (priority IN ('low', 'medium', 'high')),
        service_id INT NOT NULL,  -- Инцидент связан с одним сервисом
        created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
        resolved_at TIMESTAMPTZ,
        FOREIGN KEY (service_id) REFERENCES services(id) ON DELETE CASCADE  -- Прямая связь с сервисом
    );

    -- Создание таблицы для сработавших проверок
    CREATE TABLE checks (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        description TEXT
    );

    -- Создание таблицы для связей между инцидентами и сработавшими проверками
    CREATE TABLE incident_checks (
        incident_id INT NOT NULL,
        check_id INT NOT NULL,
        PRIMARY KEY (incident_id, check_id),
        FOREIGN KEY (incident_id) REFERENCES incidents(id) ON DELETE CASCADE,
        FOREIGN KEY (check_id) REFERENCES checks(id) ON DELETE CASCADE
    );

    -- Создание таблицы для отчетов
    CREATE TABLE incident_reports (
        id SERIAL PRIMARY KEY,
        report_text TEXT NOT NULL,
        status VARCHAR(50) CHECK (status IN ('draft', 'finalized')),
        version INT DEFAULT 1,
        created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
    );

    -- Создание таблицы для связи отчетов и инцидентов (связь "многие ко многим")
    CREATE TABLE report_incidents (
        report_id INT NOT NULL,
        incident_id INT NOT NULL,
        PRIMARY KEY (report_id, incident_id),
        FOREIGN KEY (report_id) REFERENCES incident_reports(id) ON DELETE CASCADE,
        FOREIGN KEY (incident_id) REFERENCES incidents(id) ON DELETE CASCADE
    );

    CREATE TABLE service_team (
        user_id INT NOT NULL,
        service_id INT NOT NULL,
        role VARCHAR(50) CHECK (role IN ('owner', 'team_member')) NOT NULL,
        PRIMARY KEY (user_id, service_id),
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        FOREIGN KEY (service_id) REFERENCES services(id) ON DELETE CASCADE
    );
  populate.sql: "\n-- Заполнение данных в таблицу users\nINSERT INTO users (name, email, phone, role) VALUES\n('Alice Smith', 'alice@example.com', '555-1234', 'owner'),\n('Bob Johnson', 'bob@example.com', '555-2345', 'team_member'),\n('Charlie Brown', 'charlie@example.com', '555-3456', 'team_member');\n\n-- Заполнение данных в таблицу services\nINSERT INTO services (name, description) VALUES\n('Email Service', 'Handles email sending and receiving'),\n('Payment Gateway', 'Processes payments and transactions'),\n('User Management', 'Deals with user accounts and permissions');\n\n-- Заполнение данных в таблицу incidents\nINSERT INTO incidents (title, description, status, priority, service_id, created_at, updated_at) VALUES\n('Email Downtime', 'Email service is unreachable', 'open', 'high', 1, NOW(), NOW()),\n('Payment Issue', 'Payments fail intermittently', 'in-progress', 'medium', 2, NOW(), NOW()),\n('User Login Problem', 'Users facing issues during login', 'resolved', 'low', 3, NOW(), NOW());\n\n-- Заполнение данных в таблицу checks\nINSERT INTO checks (name, description) VALUES\n('Server Health Check', 'Monitors server performance metrics'),\n('Payment Gateway Health', 'Checks the status of the payment gateway'),\n('Authentication System Status', 'Monitors the user authentication system');\n\n\n\n-- Заполнение данных в таблицу incident_reports\nINSERT INTO incident_reports (report_text, status, version, created_at, updated_at) VALUES\n('Initial analysis of email downtime issue', 'draft', 1, NOW(), NOW()),\n('Follow-up report on payment gateway issue', 'draft', 1, NOW(), NOW()),\n('Downing-back report on psb issue', 'draft', 1, NOW(), NOW());\n\n\n-- Вставка данных в таблицу service_team\n\nINSERT INTO service_team (user_id, service_id, role) VALUES \n(1, 1, 'owner'),\n(2, 1, 'team_member'),\n(3, 2, 'owner'),\n(2, 3, 'team_member');\n\n-- Заполнение связей между инцидентами и сработавшими проверками\nINSERT INTO incident_checks (incident_id, check_id) VALUES\n(1, 1),\n(2, 2),\n(3, 3);\n\n-- Связь между отчетами и инцидентами\nINSERT INTO report_incidents (report_id, incident_id) VALUES\n(1, 1),\n(2, 2),\n(3, 3);\n"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: postgres
  name: postgres-cm1
